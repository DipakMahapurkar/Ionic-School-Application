// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
    $max: breakpoint-max($name, $breakpoints);
    @if $max {
      @media (max-width: $max) {
        @content;
      }
    } @else {
      @content;
    }
  }
  
  
  // Name of the next breakpoint, or null for the last breakpoint.
  //
  //    >> breakpoint-next(sm)
  //    md
  //    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
  //    md
  //    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
  //    md
  @function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
    $n: index($breakpoint-names, $name);
    @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
  }
  
  
  // Maximum breakpoint width. Null for the largest (last) breakpoint.
  // The maximum value is calculated as the minimum of the next one less 0.1.
  //
  //    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
  //    767px
  @function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
    $next: breakpoint-next($name, $breakpoints);
    @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
  }
  
  
  // Creates text alignment classes based on screen size
  // TODO this would be nice to add to the framework
  @each $breakpoint in map-keys($grid-breakpoints) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
  
    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
      // Provide text `[text-{bp}]` attributes for aligning text based on screen size
      [text#{$infix}-center] {
        text-align: center;
      }
  
      [text#{$infix}-left] {
        text-align: left;
      }
  
      [text#{$infix}-right] {
        text-align: right;
      }
  
      [hidden#{$infix}-up] {
        display: none;
      }
    }
  
    @include media-breakpoint-down($breakpoint, $grid-breakpoints) {
      [hidden#{$infix}-down] {
        display: none;
      }
    }
  }
  
  .toolbar-title-md {
      text-align: center;
  }
  .toolbar-md ion-title {
      position: absolute;
      top: 0;
      left: 0;
      padding: 0;  
      width: 100%;
      height: 100%;
      pointer-events: none;
  }
  .toolbar-title-wp {
    text-align: center;
  }
  .toolbar-wp ion-title {
      position: absolute;
      top: 0;
      left: 0;
      padding: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
  }
  
  ion-navbar {
      box-shadow: 0px 5px 16px 1px rgba(117, 117, 117, 0.8);
  }
  
  ion-content{
      background-color: rgb(224, 224, 224) !important;
  }